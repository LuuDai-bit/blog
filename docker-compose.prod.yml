version: "3"
services:
  app:
    container_name: blog_prod
    build:
      context: .
      dockerfile: .envs/stag/ruby/Dockerfile
    image: blog_image:latest
    command: bash -c "rm -f tmp/pids/server.pid && bundle install && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/blog
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - internal
    environment:
      - RAILS_ENV=production
    env_file:
      - .env

  nginx:
    build:
      context: .envs/stag
      dockerfile: nginx/Dockerfile
      args:
        - DOMAIN_WEB=${DOMAIN_WEB}
    image: nginx_prod
    volumes:
      - ./log:/app/log
    env_file:
      - .env.docker
    ports:
      - 80:80
      - 443:443
    networks:
      - internal

  postgres:
    image: postgres
    container_name: blog_database_prod
    ports:
      - "5432:5432"
    env_file:
      - .env
      - .env.docker
    volumes:
      - /opt/db:/var/lib/postgresql/data
    networks:
      - internal

  redis:
    image: redis:5.0.3
    env_file:
      - .env.docker
    ports:
      - 6379:6379
    command: ["bash", "-c", "docker-entrypoint.sh --requirepass $${REDIS_PASSWORD}"]
    networks:
      - internal

  sidekiq:
    container_name: blog_sidekiq
    image: blog_image:latest
    command: bash -c "bundle install
                      && bundle exec rails db:prepare
                      && bundle exec rails db:migrate
                      && whenever --update-crontab
                      && sudo service cron restart
                      && bundle exec sidekiq"
    volumes:
      - .:/harada-blog-backend
    depends_on:
      - postgres
      - redis
      - app
    networks:
      - internal
    tty: true

networks:
  internal:
    driver: bridge
