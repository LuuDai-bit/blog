upstream app_service {
  server app:3000;
}

upstream app_be_service {
  server app_be:3000;
}

upstream app_fe_service {
  server app_fe:8080;
}

server {
  # Define where Nginx should write its logs
  access_log $APP_PATH/log/access.log;
  error_log $APP_PATH/log/error.log;

  # ssl config
  listen                80;

  satisfy any;

  # App domain
  server_name codedehoc.click;

  return 301 https://codedehoc.click$request_uri;
}

server {
  # Define where Nginx should write its logs
  access_log $APP_PATH/log/access.log;
  error_log $APP_PATH/log/error.log;

  # ssl config
  listen                443 ssl default_server;
  ssl_certificate       /etc/nginx/ssl/codedehoc_site/codedehoc.click.cert;
  ssl_certificate_key   /etc/nginx/ssl/codedehoc_site/codedehoc.click.key;
  ssl_protocols TLSv1   TLSv1.1 TLSv1.2;
  ssl_ciphers           HIGH:!aNULL:!MD5;

  satisfy any;

  # App domain
  server_name codedehoc.click;

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  location ^~ /api/v1 {
    proxy_pass http://app_be_service;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
    client_max_body_size 23M;
  }

  location ^~ /bo {
    proxy_pass http://app_fe_service/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
    client_max_body_size 23M;
  }

  location / {
    proxy_pass http://app_service;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
    client_max_body_size 23M;
  }
}
